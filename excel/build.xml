<?xml version="1.0"?>

<project name="word" basedir="." default="all">

	<property name="name" value="word" />

	<property name="src.dir" value="src" />
	<property name="build.dir" value=".classes" />
	<property name="WebRoot.dir" value="WebRoot" />
	<property name="lib.dir" value="${WebRoot.dir}/WEB-INF/lib" />
	<property name="war.dir" value="war" />
	<property name="dist.dir" value="dist" />


	<property name="yuicompressor.jar" value="${WebRoot.dir}/WEB-INF/lib/yuicompressor-2.4.7.jar" />
	<property name="js.build.dir" value="${WebRoot.dir}/component/" />
	<property name="js.build.dir2" value="${WebRoot.dir}/js/" />
	<property name="css.build.dir" value="${WebRoot.dir}/style/" />

	<property name="findbugs.home" value="${WebRoot.dir}/../findbugs" />
	<property name="jvmargs" value="-server -Xss1m -Xmx800m -Duser.language=en -Dfindbugs.home={findbugs.home}" />
	<property name="report.dir" value="${war.dir}/bugReport" />
	<property name="findbugs.file" value="${report.dir}/smp-fb-report.xml" />
	<property name="findbugs.desthtml" value="${report.dir}/smp-fb-report.html" />
	
	<path id="classpath">
		<fileset dir="${lib.dir}">
		</fileset>

		<fileset dir="lib">
		</fileset>
	</path>

	<path id="findbugs.lib">
		<fileset dir="${findbugs.home}">
			<include name="findbugs-ant.jar" />
		</fileset>
	</path>


	<target name="clean" description="Clean output dirs">
		<delete dir="${build.dir}" />
		<delete dir="${war.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="build" description="Compile main source tree java files into class files and copy other files into war.dir">
		<mkdir dir="${build.dir}" />

		<javac destdir="${build.dir}" source="1.6" target="1.6" debug="true" deprecation="false" optimize="false" failonerror="true" includeantruntime="false">
			<src path="${src.dir}" />
			<compilerarg line="-encoding UTF-8" />
			<!--
			<compilerarg line="-Xlint:deprecation" />
			<compilerarg line="-Xlint:unchecked" />
			-->
			<classpath refid="classpath" />
		</javac>

		<copy todir="${build.dir}" preservelastmodified="true">
			<fileset dir="${src.dir}">
				<include name="**/*.xml" />
				<include name="**/com/yuanwang/smp/web/component/tags.dtd" />
				<include name="**/com/yuanwang/smp/web/service/common/menu/resource/menu.dtd" />
				<include name="**/com/yuanwang/smp/web/component/tags/yuanwang-tags.tld" />
				<include name="**/*.properties" />
			</fileset>
		</copy>

		<copy todir="${war.dir}" preservelastmodified="true">
			<fileset dir="${WebRoot.dir}">
				<exclude name="component/**/*.js" />
				<exclude name="js/**/*.js" />
				<exclude name="style/**/*.css" />
				<exclude name="jspTest/**" />
				<exclude name="Flash/**" />
			</fileset>
		</copy>

		<copy todir="${war.dir}/WEB-INF/classes" preservelastmodified="true">
			<fileset dir="${build.dir}">
			</fileset>
		</copy>

	</target>

	<!--压缩js-->
	<target name="minify-js">
		<apply executable="java" dest="${war.dir}/component/">
			<fileset dir="${js.build.dir}">
				<include name="**/*.js" />
			</fileset>

			<arg line="-jar" />
			<arg path="${yuicompressor.jar}" />
			<arg line="--charset utf-8" />
			<arg value="--type" />
			<arg value="js" />
			<arg value="-o" />
			<targetfile />
			<mapper type="glob" from="*.js" to="*.js" />
		</apply>

		<apply executable="java" dest="${war.dir}/js/">
			<fileset dir="${js.build.dir2}">
				<include name="**/*.js" />
			</fileset>

			<arg line="-jar" />
			<arg path="${yuicompressor.jar}" />
			<arg line="--charset utf-8" />
			<arg value="--type" />
			<arg value="js" />
			<arg value="-o" />
			<targetfile />
			<mapper type="glob" from="*.js" to="*.js" />
		</apply>
	</target>

	<!--压缩css-->
	<target name="minify-css">
		<apply executable="java" verbose="true" dest="${war.dir}/style/" failonerror="true" parallel="false">
			<fileset dir="${css.build.dir}">
				<include name="**/*.css" />
			</fileset>
			<arg line="-jar" />
			<arg path="${yuicompressor.jar}" />
			<arg line="--charset utf-8" />
			<arg value="--type" />
			<arg value="css" />
			<arg value="-o" />
			<targetfile />
			<mapper type="glob" from="*.css" to="*.css" />
		</apply>
	</target>


	<!--声明findbug任务-->
	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="findbugs.lib" />
	<taskdef name="convertXmlToText" classname="edu.umd.cs.findbugs.anttask.ConvertXmlToTextTask" classpathref="findbugs.lib" />
	
	<target name="findbugs" depends="build">
		<mkdir dir="${report.dir}" />
		<findbugs home="${findbugs.home}" output="xml" outputFile="${findbugs.file}" jvmargs="${jvmargs}" quietErrors="true">
			<class location="${build.dir}" />
			<!--需要代码走查的class文件目录-->
			<sourcePath path="${src.dir}" />
			<!--源代码目录-->
			<auxClasspath path="${lib.dir}" />
			<!--依赖但不需要分析的类-->
		</findbugs>
	</target>

	
	<!--转化findbug xml格式的报告文件为html-->
	<target name="convertXmlToHtml" >
		<convertXmlToText home="${findbugs.home}" input="${findbugs.file}" output="${findbugs.desthtml}" format="html">
		</convertXmlToText>
	</target>

	<target name="warfile" depends="build" description="Build the web application archive">
		<mkdir dir="${dist.dir}" />
		<war warfile="${dist.dir}/${name}.war" basedir="${war.dir}" webxml="${war.dir}/WEB-INF/web.xml">
		</war>
	</target>

	<!--
	<target name="all" depends="clean,build,findbugs,convertXmlToHtml,minify-js,minify-css,warfile" description="Clean,build,findbugs,convertXmlToHtml,minify-js,minify-css,warfile" />
	-->
	<target name="all" depends="clean,build,minify-js,minify-css,warfile" description="Clean,build,minify-js,minify-css,warfile" />

</project>
